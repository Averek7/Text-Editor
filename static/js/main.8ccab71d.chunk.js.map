{"version":3,"sources":["Component/navbar.js","Component/textform.js","Component/alert.js","App.js","reportWebVitals.js","index.js"],"names":["navbar","props","className","mode","href","title","type","id","about","role","placeholder","onClick","toggleMode","htmlFor","Textform","useState","text","SetText","rows","value","onChange","event","target","style","backgroundColor","color","disabled","length","console","log","newText","toLowerCase","showAlert","toUpperCase","split","join","copy","document","getElementById","select","navigator","clipboard","writeText","newtext","lowtext","trim","replace","uptext","Alert","height","alert","typ","word","lower","charAt","slice","Capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"sMAGe,SAASA,EAAOC,GAC3B,OACI,mCACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACI,sBAAKD,UAAU,kBAAf,UACI,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACI,sBAAMJ,UAAU,0BAEpB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACI,qBAAIL,UAAU,kCAAd,UACI,oBAAIA,UAAU,WAAd,SACI,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,oBAEJ,oBAAIF,UAAU,WAAd,SACI,mBAAGA,UAAU,WAAWE,KAAK,SAA7B,SAAuCH,EAAMO,UAEjD,qBAAIN,UAAU,oBAAd,UACI,mBAAGA,UAAU,2BAA2BE,KAAK,IAAIG,GAAG,iBAAiBE,KAAK,SAAS,iBAAe,WAAW,gBAAc,QAA3H,sBAGA,qBAAIP,UAAU,gBAAgB,kBAAgB,iBAA9C,UACI,6BAAI,mBAAGA,UAAU,gBAAgBE,KAAK,IAAlC,sBACJ,6BAAI,mBAAGF,UAAU,gBAAgBE,KAAK,IAAlC,8BACJ,6BAAI,oBAAIF,UAAU,uBAClB,6BAAI,mBAAGA,UAAU,gBAAgBE,KAAK,IAAlC,yCAGZ,oBAAIF,UAAU,WAAd,SACI,mBAAGA,UAAU,oBAAoBE,KAAK,IAAtC,2BAGR,uBAAMF,UAAU,SAAhB,UACI,uBAAOA,UAAU,oBAAoBI,KAAK,SAASI,YAAY,SAAS,aAAW,WACnF,wBAAQR,UAAS,0BAAoC,SAAfD,EAAME,KAAkB,QAAU,QAAUG,KAAK,SAAvF,uBAGJ,sBAAMJ,UAAU,cAAhB,SACI,sBAAKA,UAAS,sCAAgD,SAAfD,EAAME,KAAkB,QAAU,QAAjF,UACI,uBAAOD,UAAU,mBAAmBI,KAAK,WAAWC,GAAG,yBAAyBI,QAASV,EAAMW,aAC/F,uBAAOV,UAAU,mBAAmBW,QAAQ,kBAA5C,SAA+DZ,EAAME,sBCzCtF,SAASW,EAASb,GAAQ,IAAD,QACpC,EAAwBc,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KAgDA,OACI,mCACI,gCACI,sBAAKf,UAAU,iBAAf,UACI,uBAAOW,QAAQ,8BAA8BX,UAAU,aAAvD,iCACA,0BAAUA,UAAU,eAAeK,GAAG,SAASW,KAAK,IAAIC,MAAOH,EAAMI,SAnDlE,SAACC,GAChBJ,EAAQI,EAAMC,OAAOH,QAkDkFI,MAAsB,SAAftB,EAAME,KAAkB,CAAEqB,gBAAiB,OAAQC,MAAO,SAAY,CAAED,gBAAiB,QAASC,MAAO,WAC3M,wBAAQnB,KAAK,SAASoB,YAAgB,OAAJV,QAAI,IAAJA,OAAA,EAAAA,EAAMW,QAAS,GAAkBzB,UAAS,kBAA4B,SAAfD,EAAME,KAAkB,OAAS,UAA9C,QAA+DQ,QAzCvI,WAChBiB,QAAQC,IAAI,0BAA4Bb,GACxC,IAAIc,EAAUd,EAAKe,cACnBd,EAAQa,GACR7B,EAAM+B,UAAU,2BAA4B,YAqChC,kCACA,wBAAQ1B,KAAK,SAASoB,YAAgB,OAAJV,QAAI,IAAJA,OAAA,EAAAA,EAAMW,QAAS,GAAkBzB,UAAS,kBAA4B,SAAfD,EAAME,KAAkB,OAAS,UAA9C,QAA+DQ,QAjDxI,WACfiB,QAAQC,IAAI,0BAA4Bb,GACxC,IAAIc,EAAUd,EAAKiB,cACnBhB,EAAQa,GACR7B,EAAM+B,UAAU,2BAA4B,YA6ChC,kCACA,wBAAQ1B,KAAK,SAASoB,YAAgB,OAAJV,QAAI,IAAJA,OAAA,EAAAA,EAAMW,QAAS,GAAkBzB,UAAS,kBAA4B,SAAfD,EAAME,KAAkB,OAAS,UAA9C,QAA+DQ,QApCvI,WAChB,IAAImB,EAAUd,EAAKkB,MAAM,QACzBjB,EAAQa,EAAQK,KAAK,OAkCT,iCACA,wBAAQ7B,KAAK,SAASoB,YAAgB,OAAJV,QAAI,IAAJA,OAAA,EAAAA,EAAMW,QAAS,GAAkBzB,UAAS,kBAA4B,SAAfD,EAAME,KAAkB,OAAS,UAA9C,QAA+DQ,QAhC3I,WACZ,IAAIyB,EAAOC,SAASC,eAAe,UACnCF,EAAKG,SACLC,UAAUC,UAAUC,UAAUN,EAAKjB,OACnClB,EAAM+B,UAAU,gBAAiB,YA4BrB,uBACA,wBAAQ1B,KAAK,SAASoB,YAAgB,OAAJV,QAAI,IAAJA,OAAA,EAAAA,EAAMW,QAAS,GAAkBzB,UAAS,kBAA4B,SAAfD,EAAME,KAAkB,OAAS,UAA9C,QAA+DQ,QA1B5I,WACX,IAAIgC,EAAU3B,EAAKe,cACnBH,QAAQC,IAAIc,GACZ,IAAIC,EAAUD,EAAQE,OAAOC,QAAQH,EAAQ,GAAI,IAC7CI,EAASJ,EAAQ,GAAGV,cACxBhB,EAAQ8B,EAASH,GACjB3C,EAAM+B,UAAU,qBAAsB,YAoB1B,4BACA,wBAAQ1B,KAAK,SAASoB,YAAgB,OAAJV,QAAI,IAAJA,OAAA,EAAAA,EAAMW,QAAS,GAAkBzB,UAAS,kBAA4B,SAAfD,EAAME,KAAkB,OAAS,UAA9C,QAA+DQ,QAlBvI,WAChBiB,QAAQC,IAAI,aAAeb,GAE3BC,EADc,IAEdhB,EAAM+B,UAAU,iBAAkB,WActB,sBAGJ,sBAAK9B,UAAU,6BAAf,UACI,mDACA,8BACI,6BAAQ,OAAJc,QAAI,IAAJA,OAAA,EAAAA,EAAMW,QAAS,EAAf,OAAoBX,QAApB,IAAoBA,GAApB,UAAoBA,EAAM6B,cAA1B,iBAAoB,EAAcX,MAAM,cAAxC,aAAoB,EAA4BP,OAAU,IADlE,aAGA,8BACI,6BAAQ,OAAJX,QAAI,IAAJA,OAAA,EAAAA,EAAMW,QAAS,GAAI,OAACX,QAAD,IAACA,OAAD,EAACA,EAAMW,UAAe,OAAJX,QAAI,IAAJA,GAAA,UAAAA,EAAMkB,MAAM,YAAZ,eAAkBP,QAAS,GAAK,IAD7E,0BAGA,8BACI,6BAAQ,OAAJX,QAAI,IAAJA,OAAA,EAAAA,EAAMW,QAAS,GAAS,OAAJX,QAAI,IAAJA,GAAA,UAAAA,EAAMkB,MAAM,YAAZ,eAAkBP,QAAS,EAAK,IAD5D,2BAKJ,sBAAKzB,UAAU,iBAAf,UACI,yCACA,6BACS,OAAJc,QAAI,IAAJA,OAAA,EAAAA,EAAMW,QAAS,EAAIX,EAAO,kCC/EpC,SAASgC,EAAM/C,GAO1B,OACI,qBAAKsB,MAAO,CAAC0B,OAAS,QAAtB,SACChD,EAAMiD,OAAS,sBAAKhD,UAAS,sBAAiBD,EAAMiD,MAAMC,IAA7B,gCAAgE1C,KAAK,QAAQF,GAAG,UAA9F,UACZ,mCARW,SAAC6C,GAChB,IAAIC,EAAQD,EAAKrB,cACjB,OAAOsB,EAAMC,OAAO,GAAGrB,cAAgBoB,EAAME,MAAM,EAAEH,EAAKzB,QAM7C6B,CAAWvD,EAAMiD,MAAMC,KAAhC,SAAkDlD,EAAMiD,MAAMO,SCkD3DC,MA/Cf,WACE,MAAwB3C,mBAAS,SAAjC,mBAAOZ,EAAP,KAAawD,EAAb,KACA,EAA0B5C,mBAAS,MAAnC,mBAAOmC,EAAP,KAAcU,EAAd,KAGM5B,EAAY,SAAC6B,EAASvD,GAC1BsD,EAAS,CACPH,IAAKI,EACLV,IAAK7C,IAEPwD,YAAW,WACTF,EAAS,QACR,MAiBL,OACE,qCAEE,cAAC,EAAD,CAAQvD,MAAM,aAAaG,MAAM,QAAQL,KAAMA,EAAMS,WAjBtC,WACJ,UAATT,GACFwD,EAAQ,QACRtB,SAAS0B,KAAKxC,MAAMC,gBAAkB,kBACtCa,SAAS0B,KAAKxC,MAAME,MAAQ,QAC5BO,EAAU,iCAAkC,aAG5C2B,EAAQ,SACRtB,SAAS0B,KAAKxC,MAAMC,gBAAkB,QACtCa,SAAS0B,KAAKxC,MAAME,MAAQ,QAC5BO,EAAU,kCAAmC,eAO7C,cAACgB,EAAD,CAAOE,MAAOA,IAMV,cAACpC,EAAD,CAAUX,KAAMA,EAAM6B,UAAWA,QC1C5BgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtC,SAASC,eAAe,SAM1B0B,K","file":"static/js/main.8ccab71d.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n \r\nexport default function navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"/about\">{props.about}</a>\r\n                            </li>\r\n                            <li className=\"nav-item dropdown\">\r\n                                <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    Dropdown\r\n                                </a>\r\n                                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                    <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n                                    <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n                                    <li><hr className=\"dropdown-divider\" /></li>\r\n                                    <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n                                </ul>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link disabled\" href=\"/\">Disabled</a>\r\n                            </li>\r\n                        </ul>\r\n                        <form className=\"d-flex\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className={`btn btn-outline-${props.mode === \"dark\" ? \"light\" : \"dark\"}`} type=\"submit\">Search</button>\r\n                        </form>\r\n\r\n                        <form className=\"d-flex mx-3\">\r\n                            <div className={`form-check form-switch text-${props.mode === \"dark\" ? \"light\" : \"dark\"}`}>\r\n                                <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckChecked\" onClick={props.toggleMode} />\r\n                                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheck\">{props.mode}</label>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function Textform(props) {\r\n    const [text, SetText] = useState();\r\n\r\n    const UpOnChange = (event) => {\r\n        SetText(event.target.value);\r\n    };\r\n\r\n    const btnUpClick = () => {\r\n        console.log(\"Converting to uppercase\" + text);\r\n        let newText = text.toUpperCase();\r\n        SetText(newText);\r\n        props.showAlert(\"Converted to uppercase !\", \"success\");\r\n    };\r\n\r\n    const btnLowClick = () => {\r\n        console.log(\"Converting to lowercase\" + text);\r\n        let newText = text.toLowerCase();\r\n        SetText(newText);\r\n        props.showAlert(\"Converted to lowercase !\", \"success\");\r\n    };\r\n\r\n    const btnExtraSpc = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        SetText(newText.join(\" \"));\r\n    };\r\n\r\n    const btnCopy = () => {\r\n        let copy = document.getElementById(\"myText\");\r\n        copy.select();\r\n        navigator.clipboard.writeText(copy.value);\r\n        props.showAlert(\"Text Copied !\", \"primary\");\r\n    };\r\n\r\n    const btnCap = () => {\r\n        let newtext = text.toLowerCase();\r\n        console.log(newtext);\r\n        let lowtext = newtext.trim().replace(newtext[0], \"\");\r\n        let uptext = newtext[0].toUpperCase();\r\n        SetText(uptext + lowtext);\r\n        props.showAlert(\"Text Capitalized !\", \"primary\");\r\n    };\r\n\r\n    const btnClrClick = () => {\r\n        console.log(\"Clearing..\" + text);\r\n        let newText = \"\";\r\n        SetText(newText);\r\n        props.showAlert(\"Text Cleared !\", \"danger\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <div className=\"container my-5\">\r\n                    <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">Enter the text here</label>\r\n                    <textarea className=\"form-control\" id=\"myText\" rows=\"5\" value={text} onChange={UpOnChange} style={props.mode === \"dark\" ? { backgroundColor: \"gray\", color: \"white\" } : { backgroundColor: \"white\", color: \"black\" }}></textarea>\r\n                    <button type=\"submit\" disabled = {text?.length > 0 ? false : true} className={`btn btn-${props.mode === \"dark\" ? \"dark\" : \"primary\"} m-2`} onClick={btnLowClick}>Convert to Lowercase</button>\r\n                    <button type=\"submit\" disabled = {text?.length > 0 ? false : true} className={`btn btn-${props.mode === \"dark\" ? \"dark\" : \"primary\"} m-2`} onClick={btnUpClick}>Convert to Uppercase</button>\r\n                    <button type=\"submit\" disabled = {text?.length > 0 ? false : true} className={`btn btn-${props.mode === \"dark\" ? \"dark\" : \"primary\"} m-2`} onClick={btnExtraSpc}>Remove Extra Spaces</button>\r\n                    <button type=\"submit\" disabled = {text?.length > 0 ? false : true} className={`btn btn-${props.mode === \"dark\" ? \"dark\" : \"primary\"} m-2`} onClick={btnCopy}>Copy Text</button>\r\n                    <button type=\"submit\" disabled = {text?.length > 0 ? false : true} className={`btn btn-${props.mode === \"dark\" ? \"dark\" : \"primary\"} m-2`} onClick={btnCap}>Captilize Text</button>\r\n                    <button type=\"submit\" disabled = {text?.length > 0 ? false : true} className={`btn btn-${props.mode === \"dark\" ? \"dark\" : \"primary\"} m-2`} onClick={btnClrClick}>Clear</button>\r\n                </div>\r\n\r\n                <div className=\"container my-3 text-center\">\r\n                    <h3>Your text summary</h3>\r\n                    <p>\r\n                        <b>{text?.length > 0 ? (text?.trim()?.split(/\\s+/)?.length) : 0}</b> words,\r\n                    </p>\r\n                    <p>\r\n                        <b>{text?.length > 0 ? (text?.length) - (text?.split(\" \")?.length - 1) : 0}</b> no. of characters &\r\n                    </p>\r\n                    <p>\r\n                        <b>{text?.length > 0 ? (text?.split(\" \")?.length - 1) : 0}</b> no. of whitespace\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"container my-3\">\r\n                    <h3>Preview</h3>\r\n                    <p>\r\n                        {text?.length > 0 ? text : \"Write Text To Preview\"}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const Capitalize = (word) => {\r\n        let lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1,word.length);\r\n    }\r\n\r\n    return (\r\n        <div style={{height : \"25px\"}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.typ} alert-dismissible fade show`} role=\"alert\" id=\"display\">\r\n            <strong>{Capitalize(props.alert.typ)} : </strong>{props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './Component/navbar.js';\nimport Textform from './Component/textform.js';\n// import About from './Component/about.js';\nimport Alert from './Component/alert.js';\nimport React, { useState } from 'react'\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      typ: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"rgb(56, 56, 56)\";\n      document.body.style.color = \"azure\";\n      showAlert(\"Successfully Enabled Dark Mode\", \"success\");\n    }\n    else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      showAlert(\"Successfully Enabled Light Mode\", \"success\");\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"Text-Utils\" about=\"About\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert}/>\n      {/* <Switch>\n        <Route path=\"/about\"> */}\n          {/* <About mode={mode}/> */}\n        {/* </Route>\n        <Route path=\"/\"> */}\n          <Textform mode={mode} showAlert={showAlert}/>\n        {/* </Route>\n      </Switch>\n    </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}